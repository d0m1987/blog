<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>60 second gists on Dominic Buehler</title><link>https://d0m1987.github.io/blog/series/60-second-gists/</link><description>Recent content in 60 second gists on Dominic Buehler</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright ¬© 2008‚Äì2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright><lastBuildDate>Mon, 09 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://d0m1987.github.io/blog/series/60-second-gists/index.xml" rel="self" type="application/rss+xml"/><item><title>Rectangle - Control your windows on MacOS with the ‚å®Ô∏è</title><link>https://d0m1987.github.io/blog/post/60_second_gists/mac_os_rectangle/</link><pubDate>Mon, 09 May 2022 00:00:00 +0000</pubDate><guid>https://d0m1987.github.io/blog/post/60_second_gists/mac_os_rectangle/</guid><description>
Rectangle - Control your windows on MacOS with the ‚å®Ô∏è I really like using MacOS, but something that always bothered me was the organization of my windows.
Sure, you have e.g. virtual desktops or the menu when you push longer on the green button in the corner of the window. But this didn't satisfy me. Sometimes you want/need to organize windows horizontally or more than two windows on a desktop. Here, we reached the limitations of MacOS.</description></item><item><title>Key Combiner - No need for your mouse anymore ‚ùåüñ±Ô∏è</title><link>https://d0m1987.github.io/blog/post/60_second_gists/key_combiner/</link><pubDate>Fri, 15 Apr 2022 00:00:00 +0000</pubDate><guid>https://d0m1987.github.io/blog/post/60_second_gists/key_combiner/</guid><description>
Key Combiner - your one stop shop for learning keyboard shortcuts I recently found Key Combiner and I just need to say: &amp;quot;Wow, what a great tool if you want to learn keyboard shortcuts!&amp;quot;
The goal of Key Combiner is to help you to find and also learn keyboard shortcuts.
There are two &amp;quot;levels&amp;quot; you can use Key Combiner.
Level 1: Using the homepage The homepage is great source of information.</description></item><item><title>Custom window title text in VS Code</title><link>https://d0m1987.github.io/blog/post/60_second_gists/vscode_window_title/</link><pubDate>Mon, 11 Apr 2022 00:00:00 +0000</pubDate><guid>https://d0m1987.github.io/blog/post/60_second_gists/vscode_window_title/</guid><description>
VS Code - Custom window title You know for sure the window title in VS Code, i.e. the text at the very top of your VS Code window.
But did you know that (like most in VS Code) you can modify it such that it suits your working style best?
Just go to the .json settings (MacOS Shortcut: Cmd + ;) and add the key-value-pair &amp;quot;window.title&amp;quot;: &amp;quot;&amp;lt;your prefered title&amp;gt;&amp;quot;
This is the default setting.</description></item><item><title>Unwrangling list comprehensions ü§ì‚òùÔ∏è</title><link>https://d0m1987.github.io/blog/post/60_second_gists/python_unwrangling_list_comprehensions/</link><pubDate>Sat, 09 Apr 2022 00:00:00 +0000</pubDate><guid>https://d0m1987.github.io/blog/post/60_second_gists/python_unwrangling_list_comprehensions/</guid><description>
If you're having problems understanding (nested) python list comprehensions like I had at the beginning, don't worry anymore! The following explanation really helped me to understand how comprehensions and for-loops are linked.
Just make yourself aware that the following for-loop ...
1items_level_1 = [1,2,3] 2for item_level_1 in items_level_1: 3print(item_level_1) ... is equivalent to this list comprehension
1[print(item_level_1) for item_level_1 in items_level_1] So the main thing that changes is that print(item_level_1) is standing in the beginning instead of being at the end of the for-loop.</description></item></channel></rss>